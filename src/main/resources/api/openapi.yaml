openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v1.0.0
  description: This is a sample OpenAPI definition for employee management operations.
  termsOfService: 'http://example.com/terms/'
servers:
  - url: 'http://localhost:8080'
    description: Development server
paths:
  '/employees/{id}':
    get:
      operationId: one
      summary: Get an employee by ID
      description: Returns the details of an employee based on the provided ID
      parameters:
        - name: id
          in: path
          description: ID of the employee to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Employee Management
    put:
      operationId: replaceEmployee
      summary: Update an existing employee
      description: Updates the details of an employee based on the provided ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Employee Management
    delete:
      operationId: deleteEmployee
      summary: Delete an employee
      description: Removes an employee from the system based on the provided ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Employee Management
  /employees:
    get:
      operationId: all
      summary: Get all employees
      description: Returns a list of all employees
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Employee Management
    post:
      operationId: newEmployee
      summary: Create a new employee
      description: Adds a new employee to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
      tags:
        - Employee Management
components:
  schemas:
    Employee:
      description: 'Employees are individuals who work for an organization, contributing their skills and expertise to achieve the organization''s goals.Roles are the specific functions or positions that employees occupy within the organization, defining their duties, responsibilities, and the scope of their work.'
      type: object
      properties:
        id:
          description: Unique identifier which should not be shared publicly
          type: integer
          format: int64
          example: 1234
          readOnly: true
        name:
          description: Employee name
          type: string
          example: Bilbo Baggins
        role:
          description: Employee role
          type: string
          example: Software Engineer
tags:
  - name: Employee Management
    description: Operations related to employee management
